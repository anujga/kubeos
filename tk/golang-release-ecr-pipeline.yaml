apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: golang-release-ecr
spec:
  description: |
    golang-release-ecr
  params:
  - name: repo-url
    type: string
    description: The git repository URL to clone from.
  - name: branch-name
    type: string
    description: The git branch to clone.
  - name: imageUrl
    type: string
  - name: imageTag
    type: string

  workspaces:
  - name: shared-data
    description: |
      This workspace will receive the cloned git repo and be passed
      to the next Task for the repo's README.md file to be read.

  tasks:
  - name: fetch-repo
    taskRef:
      name: git-clone
    workspaces:
    - name: output
      workspace: shared-data
    params:
    - name: url
      value: $(params.repo-url)
    - name: revision
      value: $(params.branch-name)

  - name: cat-readme
    runAfter: [ "fetch-repo" ]  # Wait until the clone is done before reading the readme.
    workspaces:
    - name: source
      workspace: shared-data
    taskSpec:
      workspaces:
      - name: source
      steps:
      - image: zshusers/zsh:4.3.15
        script: |
          #!/usr/bin/env zsh
          cat $(workspaces.source.path)/README.md


  - name: create-tag
    runAfter: [ "fetch-repo" ]  # Wait until the clone is done before reading the readme.
    workspaces:
    - name: source
      workspace: shared-data
    taskSpec:
      workspaces:
      - name: source
      steps:
      - image: docker.io/python:3.9-buster
        script: |
          #!/usr/bin/env bash

          cd $(workspaces.source.path)
          git config user.name "meson-bot"
          git config user.email "meson-bot@meson.ai"

          pip install semver

          pysemver bump patch $(cat VERSION) > VERSION

          git checkout -b master
          git add VERSION
          git commit -m "Release version $(cat VERSION)"

  - name: go-build
    runAfter:
    - create-tag

    # conditions:
    #   - conditionRef: "go-test"
    #     resources:
    #       - name: source-repo
    #         resource: source-repo

    workspaces:
    - name: source
      workspace: shared-data
    taskRef:
      name: golang-make
    params:
    - name: args
      value: make

  - name: docker-build-publish
    taskRef:
      name: kaniko
    runAfter: [ "go-build" ]
      workspaces:
      - name: source
        workspace: shared-data
      params:
      # - name: CONTEXT
      #   value: ./
      # - name: DOCKERFILE
      #   value: Dockerfile
      - name: IMAGE
        value: $(params.imageUrl):$(params.imageTag)

  - name: push-tag
    runAfter: [ "go-build" ]  # Wait until the clone is done before reading the readme.
    workspaces:
    - name: source
      workspace: shared-data
    taskSpec:
      workspaces:
      - name: source
      steps:
      - image: docker.io/python:3.9-buster
        script: |
          #!/usr/bin/env bash

          set -x
          cd $(workspaces.source.path)
          # git config user.name "meson-bot"
          # git config user.email "meson-bot@meson.ai"
          ssh-keyscan -H github.com >> $HOME/.ssh/known_hosts
          ls $HOME/.ssh/
          echo "Pushing detached tag of new version"

          git tag  -a "v$(cat VERSION)" -m "Release version $(cat VERSION) tag"
          GIT_SSH_COMMAND="ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -i $HOME/.ssh/id_git-ssh " git push origin master --follow-tags
          echo "done"

---
apiVersion: tekton.dev/v1alpha1
kind: Condition
metadata:
  name: go-test
  namespace: getting-started
spec:
  resources:
  - name: source-repo
    type: git
  check:
    image: golang
    command: [ "go" ]
    workingDir: "$(resources.source-repo.path)"
    args: [ 'test', "./..." ]
